openapi: 3.0.2

info:
  title: "User API"
  description: "User API"
  version: "1.0"

servers:
  - url: http://localhost:8000

paths:
  "/api/users":
    post:
      description: "Register new user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - firstName
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
            examples:
              "Ivanzkyanto":
                value:
                  username: "Ivanzkyanto"
                  password: "ivansecret123"
                  email: "ivanzkyanto@gmail.com"
                  firstName: "Ivan"
                  lastName: "Rizkyanto"
              "Susan":
                value:
                  username: "Susan456"
                  password: "susansecret123"
                  email: "susan@gmail.com"
                  firstName: "Susan"
      responses:
        "201":
          description: "Success registered user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                  errors:
                    type: object
              examples:
                "Ivan Success":
                  value:
                    data:
                      id: 1
                "Susan Success":
                  value:
                    data:
                      id: 2
        "400":
          description: "Validation error"
          content:
            application/json:
              examples:
                "Invalid username":
                  description: "Username field not valid error"
                  value:
                    errors:
                      username:
                        - "username must not be a blank"
                        - "username min 6 character length"
                "Invalid password":
                  description: "Password field not valid error"
                  value:
                    errors:
                      password:
                        - "password must not be a blank"
                        - "password must be confirmed"
                        - "password min 8 character length, contains uppercase letter, number, and special character"
                "Invalid email":
                  description: "Email field not valid error"
                  value:
                    errors:
                      email:
                        - "email must not be a blank"
                        - "email must match the email format"
                "Invalid firstName":
                  description: "First name field not valid error"
                  value:
                    errors:
                      firstName:
                        - "firstName must not be a blank"
                "Combination Errors 1":
                  description: "Multiple field not valid error"
                  value:
                    errors:
                      username:
                        - "username must not be a blank"
                      password:
                        - "password min 8 character length"
                "Combination Errors 2":
                  description: "Multiple field not valid error"
                  value:
                    errors:
                      username:
                        - "username must not be a blank"
                        - "username min 6 character length"
                      firstName:
                        - "firstName must not be a blank"
                      email:
                        - "email must match the email format"

  "/api/auth/login":
    post:
      description: "Login user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "Success login"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                  errors:
                    type: object
        "401":
          description: "Failed login"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
              examples:
                "Wrong credential":
                  description: "Incorrect or not found user credential"
                  value:
                    errors:
                      message: "Username or password is wrong"

  "/api/users/current":
    get:
      description: "Get current User"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        "200":
          description: "Success get current user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                  errors:
                    type: object
        "401":
          description: "Unauthenticated error"
          content:
            application/json:
              examples:
                "Unauthenticated user cannot access the resource":
                  value:
                    errors:
                      message: "Unauthorized."
    put:
      description: "Update current user"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody:
        description: "Update current user data"
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
            examples:
              "Update firstName only":
                value:
                  firstName: "Budi"
              "Update email and firstName":
                value:
                  email: "newemail@gmail.com"
                  firstName: "Budi"
              "Update all":
                description: "Update all editable field"
                value:
                  username: "budisantoso"
                  email: "newemail@gmail.com"
                  firstName: "Budi"
                  lastName: "Santoso"
      responses:
        "200":
          description: "Success update current user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                  errors:
                    type: object
        "400":
          description: "Validation error"
          content:
            application/json:
              examples:
                "Invalid email":
                  description: "Email field not valid error"
                  value:
                    errors:
                      email:
                        - "email must not be a blank"
                        - "email must match the email format"
                "Invalid firstName":
                  description: "First name field not valid error"
                  value:
                    errors:
                      firstName:
                        - "firstName must not be a blank"
                "Combination Errors 1":
                  description: "Multiple field not valid error"
                  value:
                    errors:
                      email:
                        - "email must match the email format"
                      firstName:
                        - "firstName max 100 character length"
                "Combination Errors 2":
                  description: "Multiple field not valid error"
                  value:
                    errors:
                      firstName:
                        - "firstName must not be a blank"
                      email:
                        - "email must match the email format"
        "401":
          description: "Unauthenticated error"
          content:
            application/json:
              examples:
                "Unauthenticated user cannot access the resource":
                  value:
                    errors:
                      message: "Unauthorized."
  
  "/api/users/current/password":
    patch:
      description: "Update password for current user"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        "200":
          description: "Success update password for current user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                  errors:
                    type: object
        "400":
          description: "Validation error"
          content:
            application/json:
              examples:
                "Invalid password":
                  description: "Password field not valid error"
                  value:
                    errors:
                      password:
                        - "password min 8 character length."
        "401":
          description: "Unauthenticated error"
          content:
            application/json:
              examples:
                "Unauthenticated user cannot access the resource":
                  value:
                    errors:
                      message: "Unauthorized."

  "/api/auth/logout":
    delete:
      description: "Logout current user"
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        "200":
          description: "Success logout current user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                  errors:
                    type: object
        "401":
          description: "Unauthenticated error"
          content:
            application/json:
              examples:
                "Unauthenticated user cannot access the resource":
                  value:
                    errors:
                      message: "Unauthorized."
